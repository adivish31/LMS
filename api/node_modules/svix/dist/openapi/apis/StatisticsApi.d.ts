import { BaseAPIRequestFactory } from 'svix/dist/openapi/apis/baseapi';
import { Configuration } from 'svix/dist/openapi/configuration';
import { RequestContext, ResponseContext, HttpInfo } from 'svix/dist/openapi/http/http';
import { AggregateEventTypesOut } from 'svix/dist/openapi/models/AggregateEventTypesOut';
import { AppUsageStatsIn } from 'svix/dist/openapi/models/AppUsageStatsIn';
import { AppUsageStatsOut } from 'svix/dist/openapi/models/AppUsageStatsOut';
import { AttemptStatisticsResponse } from 'svix/dist/openapi/models/AttemptStatisticsResponse';
export declare class StatisticsApiRequestFactory extends BaseAPIRequestFactory {
    v1StatisticsAggregateAppStats(appUsageStatsIn: AppUsageStatsIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1StatisticsAggregateEventTypes(_options?: Configuration): Promise<RequestContext>;
    v1StatsAppAttempts(appId: string, startDate?: Date, endDate?: Date, _options?: Configuration): Promise<RequestContext>;
    v1StatsEndpointAttempts(appId: string, endpointId: string, startDate?: Date, endDate?: Date, _options?: Configuration): Promise<RequestContext>;
}
export declare class StatisticsApiResponseProcessor {
    v1StatisticsAggregateAppStatsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AppUsageStatsOut>>;
    v1StatisticsAggregateEventTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AggregateEventTypesOut>>;
    v1StatsAppAttemptsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AttemptStatisticsResponse>>;
    v1StatsEndpointAttemptsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AttemptStatisticsResponse>>;
}
