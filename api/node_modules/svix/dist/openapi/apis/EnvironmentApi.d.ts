import { BaseAPIRequestFactory } from 'svix/dist/openapi/apis/baseapi';
import { Configuration } from 'svix/dist/openapi/configuration';
import { RequestContext, ResponseContext, HttpInfo } from 'svix/dist/openapi/http/http';
import { EnvironmentIn } from 'svix/dist/openapi/models/EnvironmentIn';
import { EnvironmentOut } from 'svix/dist/openapi/models/EnvironmentOut';
export declare class EnvironmentApiRequestFactory extends BaseAPIRequestFactory {
    v1EnvironmentExport(idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1EnvironmentExportGet(_options?: Configuration): Promise<RequestContext>;
    v1EnvironmentImport(environmentIn: EnvironmentIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
}
export declare class EnvironmentApiResponseProcessor {
    v1EnvironmentExportWithHttpInfo(response: ResponseContext): Promise<HttpInfo<EnvironmentOut>>;
    v1EnvironmentExportGetWithHttpInfo(response: ResponseContext): Promise<HttpInfo<EnvironmentOut>>;
    v1EnvironmentImportWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
}
