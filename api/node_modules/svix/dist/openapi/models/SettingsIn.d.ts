import { CustomColorPalette } from 'svix/dist/openapi/models/CustomColorPalette';
import { CustomStringsOverride } from 'svix/dist/openapi/models/CustomStringsOverride';
import { CustomThemeOverride } from 'svix/dist/openapi/models/CustomThemeOverride';
export declare class SettingsIn {
    'colorPaletteDark'?: CustomColorPalette;
    'colorPaletteLight'?: CustomColorPalette;
    'customBaseFontSize'?: number | null;
    'customColor'?: string | null;
    'customFontFamily'?: string | null;
    'customFontFamilyUrl'?: string | null;
    'customLogoUrl'?: string | null;
    'customStringsOverride'?: CustomStringsOverride;
    'customThemeOverride'?: CustomThemeOverride;
    'disableEndpointOnFailure'?: boolean;
    'displayName'?: string | null;
    'enableChannels'?: boolean;
    'enableIntegrationManagement'?: boolean;
    'enableTransformations'?: boolean;
    'enforceHttps'?: boolean;
    'eventCatalogPublished'?: boolean;
    'readOnly'?: boolean;
    'showUseSvixPlay'?: boolean;
    'wipeSuccessfulPayload'?: boolean;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
